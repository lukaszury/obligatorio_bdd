/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.PermisosRolesAppsControlador;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.PermisosRolesAppsInterface;

/**
 *
 * @author mauri
 */
public class FrmPermisosAppsRoles extends javax.swing.JFrame implements PermisosRolesAppsInterface {
    PermisosRolesAppsControlador controlador;
    /**
     * Creates new form FrmPermisosAppsRoles
     */
    public FrmPermisosAppsRoles() {
        initComponents();
        
        try {
            controlador = new PermisosRolesAppsControlador(this);
        } catch (SQLException ex) {
            Logger.getLogger(FrmRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
        esconderColumna(2,TablaRolesApps);
        esconderColumna(2,TablaPermisos);
        esconderColumna(3,TablaRolesApps);
        esconderColumna(3,TablaPermisos);
        esconderColumna(4,TablaPermisos);
        cargarRoles();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        AgregarPermiso = new javax.swing.JButton();
        QuitarPermiso = new javax.swing.JButton();
        MostrarPermisos = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        JCBroles = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRolesApps = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaPermisos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Roles de negocio");

        AgregarPermiso.setText("Agregar Permiso");
        AgregarPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPermisoActionPerformed(evt);
            }
        });

        QuitarPermiso.setText("Quitar Permiso");
        QuitarPermiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarPermisoActionPerformed(evt);
            }
        });

        MostrarPermisos.setText("Mostrar Permisos");
        MostrarPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarPermisosActionPerformed(evt);
            }
        });

        jLabel3.setText("Permisos del Rol");

        JCBroles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        TablaRolesApps.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "App", "Rol", "AppId", "RolId"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaRolesApps);

        TablaPermisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "App", "Rol", "AppID", "RolID", "roll_negocio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaPermisos);

        jLabel1.setText("Roles de apps");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(MostrarPermisos)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCBroles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(QuitarPermiso, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(AgregarPermiso)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JCBroles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(MostrarPermisos))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuitarPermiso)
                    .addComponent(AgregarPermiso))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarPermisosActionPerformed
       
        int rol = JCBroles.getSelectedIndex()+1;
        cargarTablaPermisosRol(rol);
        cargarTablaPermisos();
    }//GEN-LAST:event_MostrarPermisosActionPerformed

    private void AgregarPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPermisoActionPerformed
        int[] fila = TablaRolesApps.getSelectedRows();
        if(fila!=null){
          int rol_negocio_id = Integer.parseInt(TablaPermisos.getValueAt(0,4).toString());
          for(int i=0;i<fila.length;i++){
            int app_id = Integer.parseInt(TablaRolesApps.getValueAt(fila[i],2).toString());
            int rol_id = Integer.parseInt(TablaRolesApps.getValueAt(fila[i],3).toString());
            if(controlador.agregarPermisoRol(app_id, rol_id,rol_negocio_id)){
             TablaRolesApps.removeRowSelectionInterval(fila[i],fila[i]);
            }
        cargarTablaPermisosRol(rol_negocio_id);
        cargarTablaPermisos();
        }   
        }
        
    }//GEN-LAST:event_AgregarPermisoActionPerformed

    private void QuitarPermisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarPermisoActionPerformed
        int[] fila = TablaPermisos.getSelectedRows();
        if(fila!=null){
            int rol_negocio_id = Integer.parseInt(TablaPermisos.getValueAt(0,4).toString());
            for(int i=0;i<fila.length;i++){
            int app_id = Integer.parseInt(TablaPermisos.getValueAt(fila[i],2).toString());
            int rol_id = Integer.parseInt(TablaPermisos.getValueAt(fila[i],3).toString());
            if(controlador.quitarPermisoRol(app_id, rol_id,rol_negocio_id)){
             TablaPermisos.removeRowSelectionInterval(fila[i],fila[i]);
            }
        
        }
        cargarTablaPermisosRol(rol_negocio_id);
        cargarTablaPermisos();
        }
        
    }//GEN-LAST:event_QuitarPermisoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPermisosAppsRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPermisosAppsRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPermisosAppsRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPermisosAppsRoles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPermisosAppsRoles().setVisible(true);
               
            }
        });
    }
    
    public void cargarRoles(){
        List<String> ls = controlador.obtenerRoles();
        JCBroles.setModel(new DefaultComboBoxModel<String>(ls.toArray(new String[0])));
        
    }
    
    private void cargarTablaPermisosRol(int rol){
        DefaultTableModel tabla = (DefaultTableModel) TablaPermisos.getModel();
        tabla.setRowCount(0);
        List<Object[]> filas = controlador.obtenerPermisosRol(rol);
        for(Object[] dato:filas){
            tabla.addRow(dato);
        }
    }
    
    private void cargarTablaPermisos(){
        DefaultTableModel tabla = (DefaultTableModel) TablaRolesApps.getModel();
        tabla.setRowCount(0);
        List<Object[]> filas = controlador.cargarTablaPermisosApps();
        for(Object[] dato:filas){
            tabla.addRow(dato);
        }
    }
    
    
    
    
    private void esconderColumna(int indice,javax.swing.JTable tabla){
        TableColumn columna = tabla.getColumnModel().getColumn(indice);
        
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setPreferredWidth(0);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarPermiso;
    private javax.swing.JComboBox<String> JCBroles;
    private javax.swing.JButton MostrarPermisos;
    private javax.swing.JButton QuitarPermiso;
    private javax.swing.JTable TablaPermisos;
    private javax.swing.JTable TablaRolesApps;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
